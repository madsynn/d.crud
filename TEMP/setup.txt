




public function updatePortLog(Request $request,$calls, $sub_calls, $id )

 $input['log_time'] = Carbon::parse($request->log_time)->format('Y-m-d h:i');


<a class="buy fa fa-cart-plus fa-2x" href="{{ $product->options->count() ? url('/product/'.$product->id.'-'.Str::slug($product->name).'/show') : url('/cart/add/'.$product->id.'/?qty=1') }}"></a>


 public function updatePortLog(Request $request,$id)
	{
		$subPortLog = SubPortLog::findorFail($id);
		$call = PslCall::findorFail($subPortLog->call_id);
		$subCall = SubCall::findorFail($subPortLog->sub_call_id);

		$validator = Validator::make($request->all(), [
			'description' => ['required'],
			'log_time' => ['required'],
		]);

		$input['description'] = $request->description;
		$input['update_user_id'] = Auth::id();
		$input['log_time'] = Carbon::parse($request->log_time)->format('Y-m-d h:i');
		$subPortLog->update($input);
return response()->json($subPortLog);
	}

scaffolder:cache-clear

		"filp/whoops": "^2.1",
		"intervention/image": "^2.3",
		"intervention/imagecache": "^2.3",
		"jeroen-g/laravel-packager": "^1.5",
		"orangehill/iseed": "^2.2",
		"itsgoingd/clockwork": "^1.12",
		"doctrine/dbal": "^2.5",
		"barryvdh/laravel-ide-helper": "^2.2",
		"barryvdh/laravel-debugbar": "^2.3",
		"roumen/sitemap": "^2.6",
		"cmgmyr/messenger": "^2.13",
		"kalnoy/nestedset": "^4.1"

composer require mpociot/laravel-apidoc-generator
Mpociot\ApiDoc\ApiDocGeneratorServiceProvider::class,

		"intervention/image": "^2.3",
		"intervention/imagecache": "^2.3",
		"jeroen-g/laravel-packager": "^1.5",
		"orangehill/iseed": "^2.2",
		"itsgoingd/clockwork": "^1.12",
		"doctrine/dbal": "^2.5",
		"barryvdh/laravel-ide-helper": "^2.2",
		"barryvdh/laravel-debugbar": "^2.3",
		"roumen/sitemap": "^2.6",
		"cmgmyr/messenger": "^2.13",
		"mpociot/laravel-test-factory-helper": "^0.2.0",
		"kalnoy/nestedset": "^4.1"


composer require barryvdh/laravel-debugbar barryvdh/laravel-ide-helper doctrine/dbal barryvdh/laravel-translation-manager laravel/scout laravel/socialite arcanedev/gravatar arcanedev/currencies roumen/sitemap cmgmyr/messenger kalnoy/nestedset


intervention/image intervention/imagecache jeroen-g/laravel-packager orangehill/iseed itsgoingd/clockwork doctrine/dbal barryvdh/laravel-ide-helper  barryvdh/laravel-debugbar roumen/sitemap cmgmyr/messenger kalnoy/nestedset filp/whoops


Barryvdh\Debugbar\ServiceProvider::class,
Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider::class,
Barryvdh\TranslationManager\ManagerServiceProvider::class,
Laravel\Scout\ScoutServiceProvider::class,
Laravel\Socialite\SocialiteServiceProvider::class,
Cmgmyr\Messenger\MessengerServiceProvider::class,
Arcanedev\LogViewer\LogViewerServiceProvider::class,
Jlapp\SmartSeeder\SmartSeederServiceProvider::class,
Mpociot\Teamwork\TeamworkServiceProvider::class,
Vuer\Notes\NotesServiceProvider::class,
Arcanedev\Gravatar\GravatarServiceProvider::class,
Roumen\Sitemap\SitemapServiceProvider::class,

KyleNoland\EloquentFoundation\Providers\EloquentFoundationServiceProvider::class,

https://bosnadev.com/2014/12/28/laravel-model-observers/

// Zizaco\Entrust\EntrustServiceProvider::class,

Arcanedev\Gravatar\GravatarServiceProvider::class,


Arcanedev\Currencies\CurrenciesServiceProvider::class,

Roumen\Sitemap\SitemapServiceProvider::class,


FIND 301 SITEMAP
LOOK FOR ADMIN CACHE OR SPEEDUP OR AJAX

vendor/bin/php-cs-fixer fix .

.php_cs


'Debugbar' => Barryvdh\Debugbar\Facade::class,
'Socialite' => Laravel\Socialite\Facades\Socialite::class,
'Gravatar' => Arcanedev\Gravatar\Facades\Gravatar::class,

composer require kyle-noland/eloquent-foundation
 composer require vergil-lai/node-categories


 VergilLai\NodeCategories\NodeCategoriesProvider::class



https://github.com/vergil-lai/node-categoires



	$ php artisan node-categories:migration

	 php artisan node-categories:migration --table=mytable

	php artisan make:model Cateory

	 Use artisan creating a model, for example:

	$ php artisan make:model Cateory
	Then, let you use trait model NodeCategoryTrait

	<?php

	namespace App;

	use Illuminate\Database\Eloquent\Model;

	class Category extends Model
	{
		use \VergilLai\NodeCategories\NodeCategoryTrait;
	}
	Add the model viewer

	In /app/Providers/EventServiceProvider.phpthe bootmethod add:

	Category::observe(\VergilLai\NodeCategories\Observer::class);




Example

Create

$parent1 = new Category();
$parent1->name = 'Parent 1';
$parent1->save();

$parent2 = new Category();
$parent2->name = 'Parent 2';
$parent2->save();

$parent3 = new Category();
$parent3->name = 'Parent 3';
$parent3->save();

$parent4 = new Category();
$parent4->name = 'Parent 4';
$parent4->save();

$parent5 = new Category();
$parent5->name = 'Parent 5';
$parent5->save();

$child1 = new Category();
$child1->parent_id = $parent1->id;     //把parent_id字段设置为上级分类的id
$child1->name = 'Child 1';
$child1->save();

$child2 = new Category();
$child2->parent_id = $parent1->id;
$child2->name = 'Child 2';
$child2->save();

$child3 = new Category();
$child3->parent_id = $parent1->id;
$child3->name = 'Child 3';
$child3->save();

$grandchild1 = new Category();
$grandchild1->parent_id = $child1->id;
$grandchild1->name = 'Grandchild 1';
$grandchild1->save();

$grandchild2 = new Category();
$grandchild2->parent_id = $child1->id;
$grandchild2->name = 'Grandchild 2';
$grandchild2->save();
result:

+----+--------+-------+--------------+----------+
| id | parent | level | name         | node     |
+----+--------+-------+--------------+----------+
|  1 |      0 |     1 | Parent 1     | ,1,      |
|  2 |      0 |     1 | Parent 2     | ,2,      |
|  3 |      0 |     1 | Parent 3     | ,3,      |
|  4 |      0 |     1 | Parent 4     | ,4,      |
|  5 |      0 |     1 | Parent 5     | ,5,      |
|  6 |      1 |     2 | Child 1      | ,1,6,    |
|  7 |      1 |     2 | Child 2      | ,1,7,    |
|  8 |      1 |     2 | Child 3      | ,1,8,    |
|  9 |      6 |     3 | Grandchild 1 | ,1,6,9,  |
| 10 |      6 |     3 | Grandchild 2 | ,1,6,10, |
+----+--------+-------+--------------+----------+





Update parent

$child1 = Category::find(6);
$child1->parent_id = 4;        //修改为id为4的子类
$child1->save();
result:




Trait Methods

public \Illuminate\Database\Eloquent\Collection childrens(void)

Get all sub-categories

$parent1 = Category::find(1);
dd($parent1->childrens());
public \Illuminate\Database\Eloquent\Collection getParent(void)

Get headings

$child1 = Category::find(6);
dd($child1->getParent());
You can use BelongTo Relation

$child1 = Category::find(6);
dd($child1->parent);
public \Illuminate\Database\Eloquent\Collection parents(void)

Get all the parent category

public static array getTree(callable $map = null)

public array tree(callable $map = null)

Get tree data structure

$ Map callable processing raw data map method for collection

$tree = Category::getTree(function($item) {
	$item->title = $item->name;
});


class User extends Eloquent
{
	public static function boot()
	{
		parent::boot();

		parent::observe(new UserObserver);
	}
}



Strictly Auto Tags

Strictly AutoTags is a plugin that automatically adds the most relevant tags to posts. Please help me and the plugin by "liking" my Faceboo




https://github.com/RoumenDamianoff/laravel-sitemap/wiki/Dynamic-sitemap

https://github.com/RoumenDamianoff/laravel-sitemap/wiki/Sitemap-index

 Define names of database tables in package config file if you don't want to use default ones:

	'messages_table' => 'messenger_messages',
	'participants_table' => 'messenger_participants',
	'threads_table' => 'messenger_threads',




Add the trait to your user model:

use Cmgmyr\Messenger\Traits\Messagable;

class User extends Model {
	use Messagable;
}


composer require algolia/algoliasearch-client-php



php artisan vendor:publish --provider="Barryvdh\Debugbar\ServiceProvider"


{{ debug(user, categories) }}

php artisan ide-helper:models Warehouse

 "post-update-cmd": [
		"Illuminate\\Foundation\\ComposerScripts::postUpdate",
		"php artisan ide-helper:generate ",
		"php artisan ide-helper:meta",
		"php artisan optimize"
	]


	php artisan vendor:publish --provider="Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider" --tag=config

	php artisan ide-helper:generate --sublime

php artisan translations:import
php artisan translations:find

php artisan translations:clean
php artisan translations:reset


//'Illuminate\Translation\TranslationServiceProvider',
'Barryvdh\TranslationManager\TranslationServiceProvider',


	Laravel 5.2, you will have to change the route/middleware setting from the default

	'route' => [
		'prefix' => 'translations',
		'middleware' => 'auth',
	],
to

	'route' => [
		'prefix' => 'translations',
		'middleware' => [
			'web',
			'auth',
		],
	],


use Laravel\Scout\Searchable;
use Illuminate\Database\Eloquent\Model;

class Post extends Model
{
	use Searchable;

	/**
	 * Get the indexable data array for the model.
	 *
	 * @return array
	 */
	public function toSearchableArray()
	{
		$array = $this->toArray();

		// Customize array...

		return $array;
	}
}

https://github.com/barryvdh/laravel-httpcache
	"barryvdh/laravel-httpcache": "0.2.x@dev"






add_action( 'wp_footer', function() {
	global $wp_filter;
	print '<pre>';
	print_r( $wp_filter['admin_bar_menu'] );
	print '</pre>';
});





	public function index()
	{
		$info = [];
		$info['post_count'] = $this->postRepository->count();
		$info['comment_count'] = $this->commentRepository->count();
		$info['user_count'] = $this->userRepository->count();
		$info['category_count'] = $this->categoryRepository->count();
		$info['tag_count'] = $this->tagRepository->count();
		$info['page_count'] = $this->pageRepository->count();
		$info['image_count'] = $this->imageRepository->count();

		return view('admin.index', compact('info'));
	}
